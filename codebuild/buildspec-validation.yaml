version: 0.2

phases:
  install:
    commands:
      #- echo "Installing Packer"
      #- curl -o packer.zip $PACKER_ZIP_URL && unzip packer.zip
      - echo "Installing jq"
      - yum install -y jq
      - pip install -U awscli

  pre_build:
    commands:
      - ls -la
      - source ./outputs.sh
      - env 
      - cp -a $PACKER_PROJECT_DIR/$PACKER_PROJECT_NAME/* .
      - echo "Validating Packer template $TEMPLATE"
      - ./packer validate $VALIDATE_TEMPLATE_NAME 
  build:
    commands:
      - ./packer build -color=false $VALIDATE_TEMPLATE_NAME | tee validate.log

  post_build:
    commands:
      - VAL_IMAGE_ID=$(egrep "${AWS_REGION}\:\sami\-" validate.log | cut -d ' ' -f2)
      # Packer does not return non-zero status; we must do that if Packer build failed
      - >
        test -n "$VAL_IMAGE_ID" || VALIDATION=false
        if [ !$VALIDATION ]; then 
           STATUS='VALIDATIONFAILED'
           sed -i.bak "s/<<AMI-STATUS>>/$STATUS/g" codebuild/ami_builder_event.json;
           sed -i.bak "s/<<AMI-ID>>/$IMAGE_ID/g" codebuild/ami_builder_event.json;
           aws events put-events --entries file://codebuild/ami_builder_event.json;
           [ -x ./codebuild/validate_cleanup.sh ] && ./codebuild/validate_cleanup.sh $IMAGE_ID || echo 'Not found';
        else
           [ -x ./codebuild/validate_cleanup.sh ] && ./codebuild/validate_cleanup.sh $VAL_IMAGE_ID || echo 'Not found';
        fi
      #- sed -i.bak "s/<<AMI-ID>>/$IMAGE_ID/g" codebuild/ami_builder_event.json
      #- aws events put-events --entries file://codebuild/ami_builder_event.json
      #- echo "validation completed on `date`"
      #- "[ -x ./codebuild/validate_cleanup.sh ] && ./codebuild/validate_cleanup.sh $IMAGE_ID || echo 'Not found'"
      # post label into ssm parameter store on parameter version
      #- aws ssm label-parameter-version --name $SSM_PARAM_NAME --parameter-version $SSM_PARAM_VERSION  --labels AIT-approved
