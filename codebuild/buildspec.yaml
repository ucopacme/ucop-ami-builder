version: 0.2

phases:
  install:
    commands:
      - echo "Installing Packer"
      - curl -o packer.zip $PACKER_ZIP_URL && unzip packer.zip
      - echo "Installing jq"
      - yum install -y jq

  pre_build:
    commands:
      - cp -a $PACKER_PROJECT_DIR/$PACKER_PROJECT_NAME/* .
      - ls -la
      - echo "Validating Packer template $TEMPLATE"
      - ./packer validate $PACKER_TEMPLATE_NAME 
  build:
    commands:
      - ./packer build -color=false $PACKER_TEMPLATE_NAME | tee build.log

  post_build:
    commands:
      - IMAGE_ID=$(egrep "${AWS_REGION}\:\sami\-" build.log | cut -d ' ' -f2)
      # Packer does not return non-zero status; we must do that if Packer build failed
      - test -n "$IMAGE_ID" || exit 1
      - sed -i.bak "s/<<AMI-ID>>/$IMAGE_ID/g" codebuild/ami_builder_event.json
      - aws events put-events --entries file://codebuild/ami_builder_event.json
      - echo "build completed on `date`"

      # post new image_id into ssm parameter store
      - SSM_PARAM_NAME=/ucop-ami-builder/$PACKER_PROJECT_NAME
      - SSM_PARAM_VERSION=$(aws ec2 ssm put-parameter --type String --name $SSM_PARAM_NAME --value $IMAGE_ID --overwrite | jq -r '.Version')
      # tag the image with the ssm parameter version
      - aws ec2 create-tags --resources $IMAGE_ID --tags Key=Version,Value=$SSM_PARAM_VERSION
      - |
        echo << EOF > heredoc_outputs.sh
        PACKER_PROJECT_NAME=$PACKER_PROJECT_NAME
        IMAGE_ID=$IMAGE_ID
        SSM_PARAM_NAME=$SSM_PARAM_NAME
        SSM_PARAM_VERSION=$SSM_PARAM_VERSION
        EOF
      - cat heredoc_outputs.sh
      - echo "PACKER_PROJECT_NAME=$PACKER_PROJECT_NAME" > outputs.sh
      - echo "IMAGE_ID=$IMAGE_ID" >> outputs.sh
      - echo "SSM_PARAM_NAME=$SSM_PARAM_NAME" >> outputs.sh
      - echo "SSM_PARAM_VERSION=$SSM_PARAM_VERSION" >> outputs.sh
      - cat outputs.sh

artifacts:
  files:
    - codebuild/ami_builder_event.json
    - build.log
    - outputs.sh
  discard-paths: yes
